/*
Based on: https://8bitworkshop.com/v3.10.0/?platform=nes&file=rletitle.c

Unpacks a RLE-compressed nametable+attribute table into VRAM.
Also uses the pal_bright() function to fade in the palette.
*/

byte[] climbr_title_pal = new byte[]
{
    0x0F, 0x11, 0x25, 0x35, 0x0F, 0x01, 0x21, 0x30,
    0x0F, 0x06, 0x1C, 0x3C, 0x0F, 0x11, 0x27, 0x38,
};

byte[] climbr_title_rle = new byte[]
{
    0x01, 0x00, 0x01, 0x10, 0x80, 0x01, 0x02, 0x00,
    0x80, 0x00, 0x80, 0x00, 0x01, 0x1f, 0x80, 0x80,
    0x00, 0x01, 0x07, 0x41, 0x4e, 0x00, 0x38, 0x42,
    0x49, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x48,
    0x4f, 0x50, 0x00, 0x47, 0x41, 0x4d, 0x45, 0x00,
    0x01, 0x02, 0x80, 0x00, 0x01, 0x1d, 0x7f, 0x7f,
    0x80, 0x00, 0x01, 0x1c, 0x8f, 0x7f, 0x80, 0x00,
    0x01, 0x06, 0x80, 0x01, 0x0b, 0x00, 0x01, 0x09,
    0x80, 0x8f, 0x80, 0x00, 0x01, 0x09, 0x7f, 0x01,
    0x02, 0x80, 0x01, 0x02, 0x7f, 0x7f, 0x80, 0x01,
    0x02, 0x00, 0xba, 0xbb, 0x00, 0x01, 0x02, 0x80,
    0x00, 0x8f, 0x80, 0x01, 0x03, 0x00, 0x80, 0x80,
    0x00, 0x01, 0x03, 0x7f, 0x7f, 0x8f, 0x8f, 0x7f,
    0x7f, 0x80, 0x7f, 0x7f, 0x80, 0x01, 0x03, 0xbe,
    0xbf, 0x80, 0x00, 0x00, 0x80, 0x01, 0x04, 0x00,
    0x80, 0x01, 0x03, 0x00, 0x01, 0x02, 0x7f, 0x7f,
    0x8f, 0x80, 0x80, 0x8f, 0x8f, 0x00, 0x7f, 0x7f,
    0x80, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0x80, 0x7f,
    0x00, 0x7f, 0x00, 0x80, 0x80, 0x7f, 0x7f, 0x80,
    0x7f, 0x00, 0x80, 0x00, 0x00, 0x7f, 0x01, 0x02,
    0x80, 0x01, 0x02, 0x00, 0x01, 0x02, 0x7f, 0x7f,
    0x80, 0x8f, 0x8f, 0x80, 0x7f, 0x01, 0x06, 0x80,
    0x80, 0x7f, 0x01, 0x02, 0x8f, 0x80, 0x80, 0x00,
    0x00, 0x7f, 0x01, 0x02, 0x80, 0x01, 0x02, 0x00,
    0x01, 0x02, 0x7f, 0x7f, 0x80, 0x80, 0x00, 0x80,
    0x7f, 0x7f, 0x8f, 0x7f, 0x8f, 0x7f, 0x7f, 0x80,
    0x80, 0x7f, 0x7f, 0x8f, 0x80, 0x80, 0x00, 0x01,
    0x02, 0x7f, 0x01, 0x02, 0x80, 0x01, 0x02, 0x00,
    0x01, 0x02, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0x80,
    0x7f, 0x7f, 0x80, 0x7f, 0x80, 0x7f, 0x7f, 0x80,
    0x80, 0x7f, 0x7f, 0x80, 0x01, 0x02, 0x00, 0x01,
    0x02, 0x7f, 0x01, 0x02, 0x80, 0x01, 0x02, 0x00,
    0x01, 0x02, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0x80,
    0x7f, 0x7f, 0x80, 0x7f, 0x80, 0x7f, 0x7f, 0x80,
    0x80, 0x7f, 0x7f, 0x80, 0x80, 0x00, 0x01, 0x03,
    0x7f, 0x01, 0x02, 0x00, 0x80, 0x01, 0x04, 0x7f,
    0x7f, 0x80, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0x80,
    0x7f, 0x80, 0x7f, 0x7f, 0x80, 0x80, 0x7f, 0x7f,
    0x80, 0x80, 0x00, 0x01, 0x03, 0x8f, 0x7f, 0x7f,
    0x00, 0x80, 0x01, 0x04, 0x7f, 0x7f, 0x80, 0x7f,
    0x7f, 0x80, 0x7f, 0x7f, 0x80, 0x7f, 0x80, 0x7f,
    0x7f, 0x80, 0x80, 0x7f, 0x7f, 0x80, 0x80, 0x00,
    0x01, 0x04, 0x8f, 0x7f, 0x7f, 0x00, 0x00, 0x7f,
    0x7f, 0x80, 0x8f, 0x8f, 0x80, 0x8f, 0x8f, 0x80,
    0x8f, 0x8f, 0x80, 0x8f, 0x00, 0x8f, 0x8f, 0x80,
    0x00, 0x8f, 0x8f, 0x80, 0x80, 0x00, 0x01, 0x05,
    0x8f, 0x7f, 0x01, 0x03, 0x8f, 0x00, 0x01, 0x05,
    0x90, 0x80, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
    0x00, 0x80, 0x01, 0x02, 0x00, 0x80, 0x00, 0x01,
    0x06, 0x8f, 0x01, 0x03, 0x00, 0x01, 0x02, 0xa1,
    0x01, 0x13, 0x00, 0x01, 0x0a, 0xac, 0xa1, 0x01,
    0x13, 0x00, 0x01, 0x09, 0xac, 0xac, 0x20, 0x01,
    0x03, 0x00, 0x01, 0x18, 0xac, 0xac, 0x00, 0x06,
    0x01, 0x12, 0x00, 0x01, 0x08, 0xac, 0xac, 0x00,
    0x00, 0x06, 0x00, 0x01, 0x10, 0x06, 0x00, 0x01,
    0x07, 0xac, 0xac, 0x00, 0x01, 0x02, 0x06, 0x00,
    0x1f, 0x00, 0x50, 0x52, 0x45, 0x53, 0x53, 0x00,
    0x53, 0x54, 0x41, 0x52, 0x54, 0x00, 0x1e, 0x00,
    0x06, 0x00, 0x01, 0x06, 0xac, 0xac, 0x00, 0x01,
    0x03, 0x06, 0x00, 0x01, 0x10, 0x06, 0x00, 0x01,
    0x05, 0xac, 0xac, 0x00, 0x01, 0x04, 0x06, 0x01,
    0x12, 0x00, 0x01, 0x04, 0xac, 0xac, 0x00, 0x01,
    0x1c, 0xac, 0xac, 0x00, 0x01, 0x1c, 0xac, 0xac,
    0x00, 0x01, 0x1c, 0xac, 0xac, 0x00, 0x01, 0x1c,
    0xac, 0xac, 0x00, 0x01, 0x1d, 0x80, 0xa0, 0x01,
    0x03, 0x20, 0x00, 0x01, 0x02, 0xa0, 0x20, 0x00,
    0xf0, 0x00, 0x01, 0x02, 0x88, 0x22, 0x02, 0x00,
    0x01, 0x04, 0x88, 0x22, 0x20, 0x00, 0x01, 0x05,
    0x0a, 0x02, 0x00, 0x01, 0x07, 0xd5, 0x55, 0x01,
    0x02, 0x75, 0x00, 0x01, 0x02, 0x55, 0x01, 0x04,
    0x00, 0x01, 0x02, 0x05, 0x01, 0x03, 0x05, 0x01,
    0x00
};

// disable rendering
ppu_off();
// set palette, virtual bright to 0 (total black)
pal_bg(climbr_title_pal);
pal_bright(0);
// unpack nametable into the VRAM
vram_adr(0x2000);
vram_unrle(climbr_title_rle);
// enable rendering
ppu_on_all();

// fade in from black
for (byte vb = 0; vb <= 4; vb++)
{
    // set virtual bright value
    pal_bright(vb);
    // wait for 4/60 sec
    ppu_wait_frame();
    ppu_wait_frame();
    ppu_wait_frame();
    ppu_wait_frame();
}

// infinite loop
while (true) ;
